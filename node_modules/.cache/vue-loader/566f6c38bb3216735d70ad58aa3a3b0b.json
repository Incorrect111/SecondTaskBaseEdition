{"remainingRequest":"/Volumes/HDD/Programming/tocode.ru/modals/SecondTask-Base-edition-/SecondTask-Base-edition-/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/HDD/Programming/tocode.ru/modals/SecondTask-Base-edition-/SecondTask-Base-edition-/src/components/ModalValidate.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Volumes/HDD/Programming/tocode.ru/modals/SecondTask-Base-edition-/SecondTask-Base-edition-/src/components/ModalValidate.vue","mtime":1596037587000},{"path":"/Volumes/HDD/Programming/tocode.ru/modals/SecondTask-Base-edition-/SecondTask-Base-edition-/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/HDD/Programming/tocode.ru/modals/SecondTask-Base-edition-/SecondTask-Base-edition-/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Volumes/HDD/Programming/tocode.ru/modals/SecondTask-Base-edition-/SecondTask-Base-edition-/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Volumes/HDD/Programming/tocode.ru/modals/SecondTask-Base-edition-/SecondTask-Base-edition-/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/HDD/Programming/tocode.ru/modals/SecondTask-Base-edition-/SecondTask-Base-edition-/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/HDD/Programming/tocode.ru/modals/SecondTask-Base-edition-/SecondTask-Base-edition-/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmZvcm0taXRlbSAuZXJyb3JUZXh0IHsKICBkaXNwbGF5OiBub25lOwogIG1hcmdpbi1ib3R0b206IDhweDsKICBmb250LXNpemU6IDEzLjQ7CiAgY29sb3I6ICNlNzNhM2E7Cn0KCi5mb3JtLWl0ZW0gewogICYuZXJyb3JJbnB1dCAuZXJyb3JUZXh0IHsKICAgIGRpc3BsYXk6IGJsb2NrOwogIH0KfQppbnB1dC5lcnJvciB7CiAgYm9yZGVyLWNvbG9yOiAjZTczYTNhOwp9Cg=="},{"version":3,"sources":["ModalValidate.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ModalValidate.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <modal title=\"Modal with Validate\" @close=\"$emit('close')\">\n    <div slot=\"body\">\n\n      <form @submit.prevent=\"onSubmit\">\n        <!--Name -->\n\n        <div class=\"form-item\" :class=\"{ errorInput : $v.name.$error }\">\n          <label>Name:</label>\n          <p class=\"errorText\" v-if=\"!$v.name.required\">Field is required!!!</p>\n          <p\n            class=\"errorText\"\n            v-if=\"!$v.name.minLength\"\n          >Name must have at least {{ $v.name.$params.minLength.min }} !</p>\n          <input v-model=\"name\" :class=\"{ error : $v.name.$error }\" @change=\"$v.name.$touch()\" />\n        </div>\n\n        <!--Email -->\n\n        <div class=\"form-item\" :class=\"{ errorInput : $v.password.$error }\">\n          <label>Email:</label>\n          <p class=\"errorText\" v-if=\"!$v.email.required\">Field is required!!!</p>\n          <p class=\"errorText\" v-if=\"!$v.email.email\">Email is not correct !</p>\n          <input v-model=\"email\" :class=\"{ error : $v.email.$error }\" @change=\"$v.email.$touch()\" />\n        </div>\n\n        <!--  Password -->\n\n        <div class=\"form-item\" :class=\"{ errorInput : $v.password.$error }\">\n          <label>Password:</label>\n          <p class=\"errorText\" v-if=\"!$v.password.required\">Field is required!!!</p>\n          <p\n            class=\"errorText\"\n            v-if=\"!$v.password.minLength\"\n          >Password must have at least {{ $v.password.$params.minLength.min }} letters.</p>\n          <input\n            v-model=\"password\"\n            :class=\"{ error : $v.password.$error }\"\n            @change=\"$v.password.$touch()\"\n          />\n        </div>\n\n        <!-- Repeat Password -->\n\n        <div class=\"form-item\" :class=\"{ errorInput : $v.repeatPassword.$error }\">\n          <label>Repeat password:</label>\n          <p class=\"errorText\" v-if=\"!$v.repeatPassword.required\">Field is required!!!</p>\n          <p class=\"errorText\" v-if=\"!$v.repeatPassword.sameAsPassword\">Passwords must be identical.</p>\n          <input\n            v-model=\"repeatPassword\"\n            :class=\"{ error : $v.repeatPassword.$error }\"\n            @change=\"$v.repeatPassword.$touch()\"\n          />\n        </div>\n\n        <!-- Button -->\n\n        <button class=\"btn btnPrimary\">Submit</button>\n      </form>\n    </div>\n  </modal>\n</template>\n\n<script>\nimport { required, minLength, email, sameAs } from \"vuelidate/lib/validators\";\n\nimport modal from \"@/components/UI/Modal.vue\";\nexport default {\n  components: {\n    modal\n  },\n  data() {\n    return {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      repeatPassword: \"\"\n    };\n  },\n  validations: {\n    name: {\n      required,\n      minLength: minLength(4)\n    },\n    email: {\n      required,\n      email\n    },\n    password: {\n      required,\n      minLength: minLength(6)\n    },\n    repeatPassword: {\n      required,\n      sameAsPassword: sameAs(\"password\")\n    }\n  },\n  methods: {\n    onSubmit() {\n      this.$v.$touch();\n      if (!this.$v.$invalid) {\n        const user = {\n          name: this.name,\n          email: this.email,\n          password: this.password,\n          repeatPassword: this.repeatPassword\n\n        };\n console.log(user);\n\n        // Reset\n          (this.name = \"\"),\n          (this.email = \"\"),\n          (this.password = \"\"),\n          (this.repeatPassword = \"\"),\n          this.$v.$reset(),\n          // Close\n          this.$emit(\"close\");\n      }\n\n    },\n//Reset\n\n    resetModalValidate() {\n        (this.name = \"\"),\n        (this.email = \"\"),\n        (this.password = \"\"),\n        (this.repeatPassword = \"\"),\n        this.$v.$reset();\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n.form-item .errorText {\n  display: none;\n  margin-bottom: 8px;\n  font-size: 13.4;\n  color: #e73a3a;\n}\n\n.form-item {\n  &.errorInput .errorText {\n    display: block;\n  }\n}\ninput.error {\n  border-color: #e73a3a;\n}\n</style>"]}]}